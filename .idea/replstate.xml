<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1454419165957">{:repl-history {:ide [], :local [&quot;(defn expiry-chan [in max-age-millis]\n  (let [middler (chan 1024 (map #(vector (System/currentTimeMillis) %)))\n        out (chan)]\n    (async/pipe in middler)\n    (go (loop []\n          (if-let [[ts value] (&lt;! middler)]\n            (do\n              (when (&lt; (- (System/currentTimeMillis) ts) max-age-millis)\n                (&gt;! out value))\n              (recur))\n            (async/close! out))))\n    out))&quot; &quot;(defn expiry-chan [in max-age-millis]\n  (let [middler (chan 1024 (map #(vector (System/currentTimeMillis) %)))\n        out (chan)]\n    (a/pipe in middler)\n    (go (loop []\n          (if-let [[ts value] (&lt;! middler)]\n            (do\n              (when (&lt; (- (System/currentTimeMillis) ts) max-age-millis)\n                (&gt;! out value))\n              (recur))\n            (a/close! out))))\n    out))&quot; &quot;(onto-chan in-chan green-eggs-n-ham)\n&quot; &quot;(def x (t/now))&quot; &quot;(type x)&quot; &quot;(= org.joda.time.DateTime (type x))&quot; &quot;(= org.joda.time.DateTime (type \&quot;Window\&quot;))&quot; &quot;(defn in-which-windows? [[time _] elem]\n  time)\n&quot; &quot;(in-which-windows? [\&quot;Fooo\&quot; \&quot;Baaaa\&quot;])&quot; &quot;(docs a/merge)&quot; &quot;(doc a/merge)&quot; &quot;(def x (partial (t/before? (t/now))))&quot; &quot;(def x (partial t/before? (t/now)))&quot; &quot;(x (t/now))&quot; &quot;(doc t/before?)&quot;], :remote []}}</component>
</project>